{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","../node_modules/lodash/keys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","../node_modules/lodash/values.js","../node_modules/lodash/_baseValues.js","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Profile/components/SelectionCard.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/HeaderWrapper.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getTokenBalance","tokenAddress","userAddress","a","contract","methods","balanceOf","call","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTotalSupply3","cake3ABI","getCake3Address","useBurnedBalance3","useTokenBalance","useWallet","account","ethereum","fastRefresh","res","arrayLikeKeys","require","baseKeys","isArrayLike","module","exports","object","isPrototype","nativeKeys","hasOwnProperty","Object","prototype","result","key","push","overArg","keys","baseRandom","array","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","baseValues","arrayMap","props","MINT_COST","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","multipliedBy","pow","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","styled","div","theme","colors","textSubtle","steps","translationId","label","Header","TranslateString","useI18n","useContext","as","color","mb","map","WalletNotConnected","UnlockButton","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","handlePreApprove","useRef","toastError","useToast","current","then","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","useHasCakeBalance","minimumBalance","gte","_objectWithoutProperties","source","excluded","i","target","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ExistingUserState","StyledCard","Card","isSuccess","Label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","style","flex","NextStepButton","endIcon","StyledApproveConfirmButtons","mediaQueries","md","Button","UIKitButton","iconAttrs","width","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","isLoading","justifyContent","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","variationId","setVariationId","useCake","useBunnyFactory","hasMinimumCakeRequired","options","response","currentAllowance","approve","toJSON","send","from","mintNFT","fontSize","bold","num","images","Number","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetCollectibles","nftsInWallet","tokenIds","useERC721","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","getPancakeProfileAddress","once","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","team","id","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","title","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","web3","useWeb3","NEW","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","personal","sign","signature","fetch","method","headers","body","JSON","stringify","username","log","ok","json","data","IDLE","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","HeaderWrapper","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","makeBatchRequest","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","flexDirection","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","ComingSoon","p","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","SecondaryCard","defaultProps","StatBox","Icon","icon","subtitle","textTransform","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"iPAMaA,EAAc,SAACC,EAAwBC,GAGlD,OADiB,IADJ,IAAIC,IAAKF,GACIG,IAAIC,UAAUC,EAA8BJ,IAiB3DK,EAAe,uCAAG,WAC7BN,EACAO,EACAC,GAH6B,iBAAAC,EAAA,6DAKvBC,EAAWX,EAAYC,EAAUO,GALV,kBAOGG,EAASC,QAAQC,UAAUJ,GAAaK,OAP3C,cAOrBC,EAPqB,yBAQpBA,GARoB,yDAUpB,KAVoB,yDAAH,2D,+RCKfC,EAAiB,WAAO,IAC3BC,EAAgBC,cAAhBD,YAD0B,EAEIE,qBAFJ,mBAE3BC,EAF2B,KAEdC,EAFc,KAclC,OAVAC,qBAAU,WAAM,4CACd,8BAAAZ,EAAA,6DACQa,EAAevB,YAAYwB,EAASC,eAD5C,SAEuBF,EAAaX,QAAQQ,cAAcN,OAF1D,OAEQY,EAFR,OAGEL,EAAe,IAAIM,IAAUD,IAH/B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACX,IAEGG,GAGIS,EAAmB,SAACrB,GAA0B,IAAD,EAC1BW,mBAAS,IAAIQ,IAAU,IADG,mBACjDZ,EADiD,KACxCe,EADwC,KAEhDb,EAAgBC,cAAhBD,YAYR,OAVAK,qBAAU,YACU,uCAAG,8BAAAZ,EAAA,6DACba,EAAevB,YAAYwB,EAASC,eADvB,SAEDF,EAAaX,QAAQC,UAAU,8CAA8CC,OAF5E,OAEbiB,EAFa,OAGnBD,EAAW,IAAIH,IAAUI,IAHN,2CAAH,qDAMlBC,KACC,CAACxB,EAAcS,IAEXF,GAGIkB,EAAkB,WAAO,IAC5BhB,EAAgBC,cAAhBD,YAD2B,EAEGE,qBAFH,mBAE5BC,EAF4B,KAEfC,EAFe,KAcnC,OAVAC,qBAAU,WAAM,4CACd,8BAAAZ,EAAA,6DACQa,EAAevB,YAAYkC,EAAUC,eAD7C,SAEuBZ,EAAaX,QAAQQ,cAAcN,OAF1D,OAEQY,EAFR,OAGEL,EAAe,IAAIM,IAAUD,IAH/B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACX,IAEGG,GAGIgB,EAAoB,SAAC5B,GAA0B,IAAD,EAC3BW,mBAAS,IAAIQ,IAAU,IADI,mBAClDZ,EADkD,KACzCe,EADyC,KAEjDb,EAAgBC,cAAhBD,YAYR,OAVAK,qBAAU,YACU,uCAAG,8BAAAZ,EAAA,6DACba,EAAevB,YAAYkC,EAAUC,eADxB,SAEDZ,EAAaX,QAAQC,UAAU,8CAA8CC,OAF5E,OAEbiB,EAFa,OAGnBD,EAAW,IAAIH,IAAUI,IAHN,2CAAH,qDAMlBC,KACC,CAACxB,EAAcS,IAEXF,GAGMsB,IAvFS,SAAC7B,GAA0B,IAAD,EAClBW,mBAAS,IAAIQ,IAAU,IADL,mBACzCZ,EADyC,KAChCe,EADgC,OAEuBQ,cAA/DC,EAFwC,EAExCA,QAASC,EAF+B,EAE/BA,SACTC,EAAgBvB,cAAhBuB,YAaR,OAXAnB,qBAAU,WAMJiB,GAAWC,GALG,uCAAG,4BAAA9B,EAAA,sEACDH,YAAgBiC,EAAUhC,EAAc+B,GADvC,OACbG,EADa,OAEnBZ,EAAW,IAAIH,IAAUe,IAFN,2CAAH,oDAMhBV,KAED,CAACO,EAASC,EAAUhC,EAAciC,IAE9B1B,I,8uOC3BT,IAAI4B,EAAgBC,EAAQ,KACxBC,EAAWD,EAAQ,KACnBE,EAAcF,EAAQ,KAkC1BG,EAAOC,QAJP,SAAcC,GACZ,OAAOH,EAAYG,GAAUN,EAAcM,GAAUJ,EAASI,K,oBCjChE,IAAIC,EAAcN,EAAQ,KACtBO,EAAaP,EAAQ,KAMrBQ,EAHcC,OAAOC,UAGQF,eAsBjCL,EAAOC,QAbP,SAAkBC,GAChB,IAAKC,EAAYD,GACf,OAAOE,EAAWF,GAEpB,IAAIM,EAAS,GACb,IAAK,IAAIC,KAAOH,OAAOJ,GACjBG,EAAetC,KAAKmC,EAAQO,IAAe,eAAPA,GACtCD,EAAOE,KAAKD,GAGhB,OAAOD,I,oBC1BT,IAGIJ,EAHUP,EAAQ,IAGLc,CAAQL,OAAOM,KAAMN,QAEtCN,EAAOC,QAAUG,G,oBCLjB,IAAIS,EAAahB,EAAQ,KA2BzBG,EAAOC,QAjBP,SAAqBa,EAAOC,GAC1B,IAAIC,GAAS,EACTC,EAASH,EAAMG,OACfC,EAAYD,EAAS,EAGzB,IADAF,OAAgBI,IAATJ,EAAqBE,EAASF,IAC5BC,EAAQD,GAAM,CACrB,IAAIK,EAAOP,EAAWG,EAAOE,GACzBG,EAAQP,EAAMM,GAElBN,EAAMM,GAAQN,EAAME,GACpBF,EAAME,GAASK,EAGjB,OADAP,EAAMG,OAASF,EACRD,I,oBCxBT,IAAIQ,EAAezB,EAAQ,KACvB0B,EAAc1B,EAAQ,KACtB2B,EAAU3B,EAAQ,KAsBtBG,EAAOC,QALP,SAAiBwB,GAEf,OADWD,EAAQC,GAAcH,EAAeC,GACpCE,K,oBCrBd,IAAIC,EAAY7B,EAAQ,KACpB8B,EAAc9B,EAAQ,KAa1BG,EAAOC,QAJP,SAAsBa,GACpB,OAAOa,EAAYD,EAAUZ,M,oBCX/B,IAAIa,EAAc9B,EAAQ,KACtB+B,EAAS/B,EAAQ,KAarBG,EAAOC,QAJP,SAAqBwB,GACnB,OAAOE,EAAYC,EAAOH,M,oBCX5B,IAAII,EAAahC,EAAQ,KACrBe,EAAOf,EAAQ,KAgCnBG,EAAOC,QAJP,SAAgBC,GACd,OAAiB,MAAVA,EAAiB,GAAK2B,EAAW3B,EAAQU,EAAKV,M,oBC9BvD,IAAI4B,EAAWjC,EAAQ,KAkBvBG,EAAOC,QANP,SAAoBC,EAAQ6B,GAC1B,OAAOD,EAASC,GAAO,SAAStB,GAC9B,OAAOP,EAAOO,Q,wMCdLuB,EAAY,GACZC,EAAgB,GAEhBC,EAA4B,CAAC,OAAQ,MAAO,QAAS,O,QCQ5DC,EAAsB,CAC1BC,eAAe,EACfC,YAAa,EACbC,OAAQ,KACRC,YAAa,CACXC,WAAY,KACZC,QAAS,MAEXC,SAAU,GACVC,oBAAqB,IAAI/D,IAZToD,GAY8BY,aAAa,IAAIhE,IAAU,IAAIiE,IAAI,KACjFC,UAAW,IAAIlE,IAZCmE,GAYoBH,aAAa,IAAIhE,IAAU,IAAIiE,IAAI,MAGnEG,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEb,eAAe,EACfC,YAAaa,EAAOE,OAExB,IAAK,YACH,OAAO,2BACFH,GADL,IAEEZ,YAAaY,EAAMZ,YAAc,IAErC,IAAK,WACH,OAAO,2BACFY,GADL,IAEEX,OAAQY,EAAOZ,SAEnB,IAAK,mBACH,OAAO,2BACFW,GADL,IAEEV,YAAa,CACXE,QAASS,EAAOT,QAChBD,WAAYU,EAAOV,cAGzB,IAAK,eACH,OAAO,2BACFS,GADL,IAEEP,SAAUQ,EAAOR,WAErB,QACE,OAAOO,IAIAI,EAAyBC,wBAA2B,MA2ClDC,EAzC2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChCC,qBAAWT,EAASb,GADY,mBACnDc,EADmD,KAC5CS,EAD4C,KAElDlE,EAAYD,cAAZC,QAERjB,qBAAU,WACR,IAAIoF,GAAe,EAiBnB,OAJInE,GAXW,uCAAG,8BAAA7B,EAAA,6DACViG,EAAuBC,cADb,SAEMD,EAAqB/F,QAAQiG,QAAQtE,GAASzB,OAFpD,OAEV+F,EAFU,OAGhBJ,EAAS,CAAEP,KAAM,aAAcC,KAAMU,EAAU,EAAI,IAG/CH,GACFD,EAAS,CAAEP,KAAM,aAAcC,KAAMU,EAAU,EAAI,IAPrC,2CAAH,oDAYbC,GAGK,WACLJ,GAAe,KAEhB,CAACnE,EAASkE,IAEb,IAAMM,EAAkCC,mBACtC,iBAAO,CACLC,SAAU,kBAAMR,EAAS,CAAEP,KAAM,eACjCgB,UAAW,SAAC7B,GAAD,OAAoBoB,EAAS,CAAEP,KAAM,WAAYb,YAC5D8B,eAAgB,SAAC3B,EAAiBD,GAAlB,OACdkB,EAAS,CAAEP,KAAM,mBAAoBV,UAASD,gBAChD6B,YAAa,SAAC3B,GAAD,OAAsBgB,EAAS,CAAEP,KAAM,eAAgBT,iBAEtE,CAACgB,IAGH,OAAO,cAACL,EAAuBiB,SAAxB,CAAiCjD,MAAK,2BAAO4B,GAAP,IAAce,YAApD,SAAgER,KC9FnEe,EAAUC,IAAOC,IAAV,8GACgB,qBAAGC,MAAkBC,OAAOC,cAKnDC,EAAQ,CACZ,CAAEC,cAAe,IAAKC,MAAO,2BAC7B,CAAED,cAAe,IAAKC,MAAO,uBAC7B,CAAED,cAAe,IAAKC,MAAO,aAC7B,CAAED,cAAe,IAAKC,MAAO,aA+BhBC,EA5BU,WACvB,IAAMC,EAAkBC,cAChB7C,EAAgB8C,qBAAW9B,GAA3BhB,YAER,OACE,eAACkC,EAAD,WACE,cAAC,IAAD,CAASa,GAAG,KAAKrE,KAAK,MAAMsE,MAAM,YAAYC,GAAG,MAAjD,SACGL,EAAgB,IAAK,mBAExB,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,mEAExB,cAAC,IAAD,CAAMI,MAAM,aAAaC,GAAG,OAA5B,SACGL,EAAgB,IAAK,yBAExB,cAAC,IAAD,UACGJ,EAAMU,KAAI,WAA2BvE,GAAW,IAAnC8D,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,MAC3B,OACE,cAAC,IAAD,CAAkBM,MAAOrE,GAASqB,EAAc,OAAS,eAAzD,SACG4C,EAAgBH,EAAeC,IADvBA,Y,SChBRS,EAhBY,WACzB,IAAMP,EAAkBC,cAExB,OACE,gCACE,cAAC,IAAD,CAASnE,KAAK,KAAKuE,GAAG,MAAtB,SACGL,EAAgB,IAAK,WAExB,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAhB,SACGL,EAAgB,IAAK,4CAExB,cAACQ,EAAA,EAAD,Q,QCaAtD,EAAsB,CAC1BuD,cAAe,OACfC,gBAAiB,KACjBC,cAAe,KACfC,aAAc,OACdC,eAAgB,KAChBC,aAAc,MAGV/C,EAAU,SAACC,EAAce,GAC7B,OAAQA,EAAQb,MACd,IAAK,oBACH,OAAO,2BACFF,GADL,IAEEyC,cAAe,YAEnB,IAAK,kBACH,OAAO,2BACFzC,GADL,IAEEyC,cAAe,YAEnB,IAAK,kBACH,OAAO,2BACFzC,GADL,IAEEyC,cAAe,UACfC,gBAAiB3B,EAAQgC,UAE7B,IAAK,gBACH,OAAO,2BACF/C,GADL,IAEEyC,cAAe,OACfE,cAAe5B,EAAQgC,UAE3B,IAAK,kBACH,OAAO,2BACF/C,GADL,IAEE4C,aAAc,YAElB,IAAK,kBACH,OAAO,2BACF5C,GADL,IAEE4C,aAAc,UACdC,eAAgB9B,EAAQgC,UAE5B,IAAK,gBACH,OAAO,2BACF/C,GADL,IAEE4C,aAAc,OACdE,aAAc/B,EAAQgC,UAE1B,QACE,OAAO/C,IA6EEgD,EAhEsB,SAAC,GAKJ,IAJhCC,EAI+B,EAJ/BA,UACAC,EAG+B,EAH/BA,UACAC,EAE+B,EAF/BA,mBAE+B,IAD/BC,iBAC+B,MADnBC,OACmB,EAEvB9G,EAAYD,cAAZC,QAFuB,EAGLiE,qBAAWT,EAASb,GAHf,mBAGxBc,EAHwB,KAGjBS,EAHiB,KAIzB6C,EAAmBC,iBAAOJ,GACxBK,EAAeC,cAAfD,WAaR,OAVAlI,qBAAU,WACJiB,GAAW+G,EAAiBI,SAC9BJ,EAAiBI,UAAUC,MAAK,SAACpG,GAC3BA,GACFkD,EAAS,CAAEP,KAAM,2BAItB,CAAC3D,EAAS+G,EAAkB7C,IAExB,CACLmD,YAAqC,YAAxB5D,EAAMyC,cACnBoB,WAAoC,YAAxB7D,EAAMyC,cAClBqB,aAAqC,YAAvB9D,EAAM4C,aACpBmB,YAAoC,YAAvB/D,EAAM4C,aACnBF,gBAAiB1C,EAAM0C,gBACvBC,cAAe3C,EAAM2C,cACrBE,eAAgB7C,EAAM6C,eACtBC,aAAc9C,EAAM8C,aACpBkB,cAAe,WACbf,IACGgB,GAAG,WAAW,WACbxD,EAAS,CAAEP,KAAM,uBAElB+D,GAAG,WAAW,SAAClB,GACdtC,EAAS,CAAEP,KAAM,kBAAmB6C,eAErCkB,GAAG,SAAS,SAACC,GACZzD,EAAS,CAAEP,KAAM,gBAAiB6C,QAASmB,IAC3CC,QAAQD,MAAM,2CAA4CA,GAC1DV,EAAW,+CAGjBY,cAAe,WACblB,IACGe,GAAG,WAAW,WACbxD,EAAS,CAAEP,KAAM,uBAElB+D,GAAG,WAAW,SAAClB,GACdtC,EAAS,CAAEP,KAAM,kBAAmB6C,YACpCK,EAAUpD,MAEXiE,GAAG,SAAS,SAACC,GACZzD,EAAS,CAAEP,KAAM,gBAAiB6C,QAASmB,IAC3CC,QAAQD,MAAM,4CAA6CA,GAC3DV,EAAW,kD,0BC3INa,EALW,SAACC,GAEzB,OADoBjI,YAAgBZ,eACjB8I,IAAID,I,QCRV,SAASE,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIjH,EAAKmH,EADLC,ECHS,SAAuCH,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIjH,EAAKmH,EAFLC,EAAS,GACTC,EAAaxH,OAAOM,KAAK8G,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAW7G,OAAQ2G,IACjCnH,EAAMqH,EAAWF,GACbD,EAASI,QAAQtH,IAAQ,IAC7BoH,EAAOpH,GAAOiH,EAAOjH,IAGvB,OAAOoH,EDTM,CAA6BH,EAAQC,GAGlD,GAAIrH,OAAO0H,sBAAuB,CAChC,IAAIC,EAAmB3H,OAAO0H,sBAAsBN,GAEpD,IAAKE,EAAI,EAAGA,EAAIK,EAAiBhH,OAAQ2G,IACvCnH,EAAMwH,EAAiBL,GACnBD,EAASI,QAAQtH,IAAQ,GACxBH,OAAOC,UAAU2H,qBAAqBnK,KAAK2J,EAAQjH,KACxDoH,EAAOpH,GAAOiH,EAAOjH,IAIzB,OAAOoH,EEJT,I,uBCiBKM,GDjBCC,GAAa5D,YAAO6D,IAAP7D,CAAH,mFACZ,qBAAG8D,WAA8B,uBAK/BC,GAAQ/D,IAAOO,MAAV,0IACC,qBAAGyD,WAA+B,cAAgB,aAIjD,qBAAGA,WAA+B,MAAQ,OAGjDC,GAAOjE,IAAOC,IAAV,yLAEY,qBAAGC,MAAkBC,OAAO+D,YAQ5CC,GAAWnE,IAAOC,IAAV,kDAIRmE,GAAwBpE,IAAOC,IAAV,kNAEA,qBAAGoE,OAsCfC,GA9BqC,SAAC,GAS9C,IARLC,EAQI,EARJA,KACA1H,EAOI,EAPJA,MAOI,IANJ2H,iBAMI,SALJC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACA3F,EAEI,EAFJA,SACGzB,EACC,2EACJ,OACE,cAACqG,GAAD,yBAAYE,UAAWU,EAAWR,WAAYW,EAAU7D,GAAG,QAAWvD,GAAtE,aACE,eAACwG,GAAD,CAAOC,WAAYW,EAAnB,UACE,eAACV,GAAD,WACE,cAAC,IAAD,CACEM,KAAMA,EACNK,QAASJ,EACT3H,MAAOA,EACP6H,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAExB,OAAOxG,QACnC8H,SAAUA,EACVG,MAAO,CAAEC,KAAM,UAEjB,cAACZ,GAAD,UAAWnF,OAEb,cAACoF,GAAD,CAAuBC,IAAKI,WEpErBO,GAJ+B,SAACzH,GAC7C,OAAO,cAAC,IAAD,aAAQ0H,QAAS,cAAC,IAAD,CAAkBpE,MAAM,kBAAuBtD,KCiBnE2H,GAA8BlF,IAAOC,IAAV,2LAM7B,qBAAGC,MAAkBiF,aAAaC,MAKhCC,GAASrF,YAAOsF,IAAPtF,CAAH,mFAGR,qBAAGE,MAAkBiF,aAAaC,MAKhCG,GAAY,CAAEC,MAAO,OAAQ3E,MAAO,gBAEpC4E,GAAezF,YAAO0F,KAAkBC,MAAMJ,GAA/BvF,CAAH,mFAGd,qBAAGE,MAAkBiF,aAAaC,MAKhCQ,GAAgB5F,YAAO6F,KAAiBF,MAAMJ,GAA9BvF,CAAH,mFAGf,qBAAGE,MAAkBiF,aAAaC,MAKhCU,GAAc,cAAC,IAAD,CAAeC,MAAI,EAAClF,MAAM,iBA0C/BmF,GAxCqD,SAAC,GAO9D,IANLC,EAMI,EANJA,kBACA5D,EAKI,EALJA,YACAE,EAII,EAJJA,aACA2D,EAGI,EAHJA,kBACAxE,EAEI,EAFJA,UACAC,EACI,EADJA,UAEMlB,EAAkBC,cAExB,OACE,eAACwE,GAAD,WACE,cAAC,IAAD,UACE,cAACG,GAAD,CACEV,SAAUsB,EACVE,QAASzE,EACTuD,QAAS5C,EAAcyD,QAAcnJ,EACrCyJ,UAAW/D,EAJb,SAMGA,EAAc5B,EAAgB,IAAK,aAAeA,EAAgB,IAAK,eAG5E,eAAC,IAAD,CAAM4F,eAAe,SAArB,UACE,cAACZ,GAAD,IACA,cAACG,GAAD,OAEF,cAAC,IAAD,UACE,cAACP,GAAD,CACEc,QAASxE,EACTgD,SAAUuB,EACVE,UAAW7D,EACX0C,QAAS1C,EAAeuD,QAAcnJ,EAJxC,SAMG4F,EAAe9B,EAAgB,IAAK,cAAgBA,EAAgB,IAAK,mBCtFrE6F,GAJY,WACzB,OAAO3F,qBAAW9B,ICad0H,GAAOC,IAAQC,QAAO,SAACC,GAAD,OAAShJ,EAA0BiJ,SAASD,EAAIE,eACtEC,GAA2B,IAAIzM,IAAUoD,GAAWY,aAAa,IAAIhE,IAAU,IAAIiE,IAAI,KAuG9EyI,GArGQ,WAAO,IAAD,EACWlN,mBAA6B,MADxC,mBACpBmN,EADoB,KACPC,EADO,OAEyBV,KAA5C9G,EAFmB,EAEnBA,QAASrB,EAFU,EAEVA,oBAAqBG,EAFX,EAEWA,UAE9BtD,EAAYD,cAAZC,QACFhB,EAAeiN,cACf7H,EAAuB8H,cACvBzG,EAAkBC,cAClByG,EAAyBrE,EAAkB+D,IARtB,EAgBvBpF,EAA6B,CAC/BG,mBAAmB,WAAD,4BAAE,8BAAAzI,EAAA,+EAGOa,EAAaX,QAAQiF,UAAUtD,EAASoE,EAAqBgI,QAAQzO,SAASY,OAHrF,cAGV8N,EAHU,OAIVC,EAAmB,IAAIlN,IAAUiN,GAJvB,kBAKTC,EAAiBtE,IAAI7E,IALZ,0DAOT,GAPS,yDAAF,kDAAC,GAUnBuD,UAAW,WACT,OAAO1H,EAAaX,QACjBkO,QAAQnI,EAAqBgI,QAAQzO,QAAS2F,EAAUkJ,UACxDC,KAAK,CAAEC,KAAM1M,KAElB2G,UAAW,WACT,OAAOvC,EAAqB/F,QAAQsO,QAAQZ,GAAaU,KAAK,CAAEC,KAAM1M,KAExE6G,UAAW,kBAAMrC,EAAQE,cAzBzB2C,EAVyB,EAUzBA,YACAC,EAXyB,EAWzBA,WACAE,EAZyB,EAYzBA,YACAD,EAbyB,EAazBA,aACAE,EAdyB,EAczBA,cACAI,EAfyB,EAezBA,cAuBF,OACE,qCACE,cAAC,IAAD,CAAM+E,SAAS,OAAO/G,MAAM,aAAagH,MAAI,EAA7C,SACGpH,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,IAAK,6BAExB,cAAC,IAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,IAAK,6EACnC,cAAC,IAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,IAAK,+DACnC,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAhB,SACGL,EAAgB,IAAK,4FAExB,cAAC,IAAD,CAAMK,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASF,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,0BAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAnB,SACGJ,EAAgB,IAAK,oEAExB,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAOD,MAAM,aAA7B,SACGJ,EAAgB,IAAD,gBAAejD,EAAf,UAAkC,CAAEsK,IAAKtK,MAE1D+I,GAAKxF,KAAI,SAAC2F,GAGT,OACE,cAAC,GAAD,CAEEnC,KAAK,cACL1H,MAAO6J,EAAIK,YACXtC,MAAK,uBAAkBiC,EAAIqB,OAAO3C,IAClCZ,UAAWuC,IAAgBL,EAAIK,YAC/BrC,SATiB,SAAC7H,GAAD,OAAmBmK,EAAegB,OAAOnL,KAU1D8H,SAAUtC,GAAeE,GAAgBC,IAAgB2E,EAP3D,SASE,cAAC,IAAD,CAAMU,MAAI,EAAV,SAAYnB,EAAInC,QARXmC,EAAIE,gBAYbO,GACA,cAAC,IAAD,CAAMtG,MAAM,UAAUC,GAAG,OAAzB,SACGL,EAAgB,KAAD,uBAAuBjD,EAAvB,yBAGpB,cAAC,GAAD,CACEyI,kBAAmC,OAAhBc,GAAwBvE,GAAeD,GAAgBD,EAC1ED,YAAaA,EACb6D,mBAAoB5D,GAAcE,IAAgB2E,EAClD5E,aAAcA,EACdb,UAAWe,EACXd,UAAWkB,SAIjB,cAAC,GAAD,CAAgBsD,QAAS3G,EAAQE,SAAUiF,UAAWnC,EAAtD,SACG/B,EAAgB,IAAK,mB,mBCpGxBwH,GAAOjI,YAAOkI,KAAPlI,CAAH,6CACC,qBAAGE,MAAkBC,OAAOgI,WAGjCC,GAAapI,IAAOC,IAAV,sDA4HDoI,GAxHkB,WAAO,IAAD,EACDzO,oBAAS,GADR,mBAC9B0I,EAD8B,KAClBgG,EADkB,OAEC1O,oBAAS,GAFV,mBAE9ByI,EAF8B,KAEjBkG,EAFiB,OAGJ5H,qBAAW9B,GAApCd,EAH6B,EAG7BA,YAAayB,EAHgB,EAGhBA,QACfiB,EAAkBC,cAJa,EAKS8H,cAAtCpC,EAL6B,EAK7BA,UAAWqC,EALkB,EAKlBA,aAAcC,EALI,EAKJA,SAC3BtP,EAAWuP,YAAU5K,EAAYC,YAC/BhD,EAAYD,cAAZC,QACAiH,EAAeC,cAAfD,WAmBR,OAAKmE,GAAqC,IAAxBqC,EAAahM,OAoB7B,qCACE,cAAC,IAAD,CAAMmL,SAAS,OAAO/G,MAAM,aAAagH,MAAI,EAA7C,SACGpH,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,IAAK,yBAExB,cAAC,IAAD,CAAMK,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASF,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,wBAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAnB,SACGJ,EACC,IACA,gGAGJ,eAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,UACGL,EAAgB,IAAK,mDACtB,cAACwH,GAAD,CAAMW,GAAG,gBAAgB9D,MAAO,CAAE+D,WAAY,OAA9C,SACGpI,EAAgB,IAAK,uBAG1B,cAAC2H,GAAD,UACGhC,EACC,cAAC,IAAD,CAAU0C,OAAO,OAAOhI,GAAG,SAE3B2H,EAAa1H,KAAI,SAACgI,GAAe,IACxBC,EADuB,YACPN,EAASK,EAAUnC,YADZ,MAExBjO,EAAUsQ,aAAiBF,EAAUpK,MAE3C,OACE,cAAC,GAAD,CACE4F,KAAK,iBAEL1H,MAAOmM,EACPvE,MAAK,uBAAkBsE,EAAUhB,OAAO3C,IACxCZ,UAAWwE,IAAiBjL,EAAYE,QACxCyG,SAAU,SAAC7H,GAAD,OAAmB2C,EAAQI,eAAesJ,SAASrM,EAAO,IAAKlE,IAN3E,SAQE,cAAC,IAAD,CAAMkP,MAAI,EAAV,SAAYkB,EAAUxE,QANjBwE,EAAUnC,iBAYzB,cAAC,IAAD,CAAShG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,oCAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EACC,IACA,mLAGJ,cAAC,IAAD,CACE2F,UAAW/D,EACXsC,SAAUrC,GAAcD,GAAuC,OAAxBtE,EAAYE,QACnDkI,QAhGY,WACpB/M,EAASC,QACNkO,QAAQ4B,cAA4BpL,EAAYE,SAChDwJ,KAAK,CAAEC,KAAM1M,IACboO,KAAK,WAAW,WACfb,GAAe,MAEhBa,KAAK,WAAW,WACfb,GAAe,GACfD,GAAc,MAEfc,KAAK,SAAS,SAACzG,GACdV,EAAW,QAAD,OAAUU,QAAV,IAAUA,OAAV,EAAUA,EAAO0G,SAC3Bd,GAAe,OAoFXtD,QAAS5C,EAAc,cAAC,IAAD,CAAe0D,MAAI,EAAClF,MAAM,sBAAoBlE,EAJvE,SAMG8D,EAAgB,IAAK,kBAI5B,cAAC,GAAD,CAAgB0F,QAAS3G,EAAQE,SAAUiF,SAAkC,OAAxB5G,EAAYE,UAAqBqE,GAAcD,EAApG,SACG5B,EAAgB,IAAK,kBArFxB,qCACE,cAAC,IAAD,CAASlE,KAAK,KAAKuE,GAAG,OAAtB,SACGL,EAAgB,IAAK,WAExB,cAAC,IAAD,CAAMoH,MAAI,EAACD,SAAS,OAAO9G,GAAG,OAA9B,SACGL,EAAgB,IAAK,oEAExB,cAAC,IAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,0Q,qBCKG6I,GA1DQ,WAAO,IAAD,EACgBhD,KAA3BiD,EADW,EACnBzL,OAAuB0B,EADJ,EACIA,QACzBiB,EAAkBC,cAChB8I,EAAUC,cAAVD,MACFE,EAAsB,SAAC7M,GAAD,OAAmB2C,EAAQG,UAAUuJ,SAASrM,EAAO,MAC3E8M,EAAalK,mBAAQ,kBAAMmK,KAAQ9N,OAAOsB,OAAOoM,MAAS,CAACA,IAEjE,OACE,qCACE,cAAC,IAAD,CAAM5B,SAAS,OAAO/G,MAAM,aAAagH,MAAI,EAA7C,SACGpH,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,IAAK,iBAExB,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAhB,SACGL,EAAgB,IAAK,uFAExB,cAAC,IAAD,CAAMK,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASF,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,iBAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EACC,IACA,sJAGHkJ,GACCA,EAAW5I,KAAI,SAAC8I,GACd,OACE,eAAC,GAAD,CAEEtF,KAAK,kBACL1H,MAAOgN,EAAKC,GACZtF,UAAW+E,IAAkBM,EAAKC,GAClCrF,MAAK,wBAAmBoF,EAAK9B,OAAO3C,IACpCV,SAAUgF,EACV/E,UAAWkF,EAAKE,WAPlB,UASE,cAAC,IAAD,CAAMlC,MAAI,EAAV,SAAYgC,EAAKtF,OACjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAeyF,GAAG,QAClB,cAAC,IAAD,UAAOH,EAAKI,MAAMC,wBAXfL,EAAKtF,cAkBtB,cAAC,GAAD,CAAgB4B,QAAS3G,EAAQE,SAAUiF,SAA4B,OAAlB4E,EAArD,SACG9I,EAAgB,IAAK,mB,6BC6Bf0J,GAnEsC,SAAC,GAO/C,IANLnP,EAMI,EANJA,QACA8C,EAKI,EALJA,OACAC,EAII,EAJJA,YACAI,EAGI,EAHJA,oBACAG,EAEI,EAFJA,UACA8L,EACI,EADJA,UAEM3J,EAAkBC,cAClB2J,EAAkBC,cAClBpL,EAAWqL,eACTC,EAAiBtI,cAAjBsI,aACFxQ,EAAeiN,cALjB,EAcAxF,EAA6B,CAC/BG,mBAAmB,WAAD,4BAAE,8BAAAzI,EAAA,+EAEOa,EAAaX,QAAQiF,UAAUtD,EAASqP,EAAgBjD,QAAQzO,SAASY,OAFhF,cAEV8N,EAFU,OAGVC,EAAmB,IAAIlN,IAAUiN,GAHvB,kBAITC,EAAiBtE,IAAI7E,IAJZ,0DAMT,GANS,yDAAF,kDAAC,GASnBuD,UAAW,WACT,OAAO1H,EAAaX,QAAQkO,QAAQ8C,EAAgBjD,QAAQzO,QAAS2F,EAAUkJ,UAAUC,KAAK,CAAEC,KAAM1M,KAExG2G,UAAW,WACT,OAAO0I,EAAgBhR,QACpBoR,cAAc3M,EAAQC,EAAYC,WAAYD,EAAYE,SAC1DwJ,KAAK,CAAEC,KAAM1M,KAElB6G,UAAU,WAAD,4BAAE,sBAAA1I,EAAA,sEACH+F,EAASwL,aAAa1P,IADnB,OAEToP,IACAI,EAAa,oBAHJ,2CAAF,kDAAC,KAxBVnI,EARE,EAQFA,YACAC,EATE,EASFA,WACAE,EAVE,EAUFA,YACAD,EAXE,EAWFA,aACAE,EAZE,EAYFA,cACAI,EAbE,EAaFA,cA0BF,OACE,eAAC,IAAD,CAAO8H,MAAM,mBAAmBP,UAAWA,EAA3C,UACE,cAAC,IAAD,CAAMvJ,MAAM,aAAaC,GAAG,MAA5B,SACGL,EAAgB,IAAK,mEAExB,eAAC,IAAD,CAAM4F,eAAe,gBAAgBvF,GAAG,OAAxC,UACE,cAAC,IAAD,UAAOL,EAAgB,IAAK,UAC5B,cAAC,IAAD,UAAOA,EAAgB,IAAD,UAAShD,EAAT,UAAgC,CAAEqK,IAAKrK,SAE/D,cAAC,GAAD,CACEwI,kBAAmBzD,GAAeD,GAAgBD,EAClDD,YAAaA,EACb6D,mBAAoB5D,GAAcE,EAClCD,aAAcA,EACdb,UAAWe,EACXd,UAAWkB,S,SPtDdc,K,YAAAA,E,kBAAAA,E,WAAAA,Q,KAML,I,GQlCYiH,GRkCNC,GAAgBC,uTAAYC,sBAC5BC,GAAwB,IAAI5Q,IAAUqD,GAAeW,aAAa,IAAIhE,IAAU,IAAIiE,IAAI,KAExF4M,GAAYjL,IAAOC,IAAV,0EAKTiL,GAAQlL,YAAOmL,IAAPnL,CAAH,sDAILoL,GAAYpL,YAAOqL,IAAPrL,CAAH,6LAuKAsL,GA5JY,WAAO,IAAD,EACa1R,oBAAS,GADtB,mBACxB2R,EADwB,KACRC,EADQ,OAEoDlF,KAA3ExI,EAFuB,EAEvBA,OAAQC,EAFe,EAEfA,YAAaG,EAFE,EAEFA,SAAUsB,EAFR,EAEQA,QAASrB,EAFjB,EAEiBA,oBAAqBG,EAFtC,EAEsCA,UAC/DmC,EAAkBC,cAChB1F,EAAYD,cAAZC,QAEAiH,EAAeC,cAAfD,WACFwJ,EAAOC,eAPkB,EAQmB9R,mBAA4B+J,GAAkBgI,KARjE,mBAQxBC,EARwB,KAQLC,EARK,OASDjS,oBAAS,GATR,mBASxBkS,EATwB,KASfC,EATe,OAUGnS,oBAAS,GAVZ,mBAUxBwM,EAVwB,KAUb4F,EAVa,OAWDpS,mBAAS,IAXR,mBAWxByP,EAXwB,KAYzBlC,GAZyB,KAYArE,EAAkBkI,KAZlB,EAaWiB,aACxC,cAAC,GAAD,CACE/N,SAAUA,EACVH,YAAaA,EACb/C,QAASA,EACT8C,OAAQA,EACRK,oBAAqBA,EACrBG,UAAWA,KAEb,GATK4N,EAbwB,oBAwBzBC,EAAgBP,IAAsBjI,GAAkByI,QAgBxDvJ,EAAa,uCAAG,kCAAA1J,EAAA,sEAElB6S,GAAa,GAFK,SAGMP,EAAK5S,IAAIwT,SAASC,KAAKpO,EAAUlD,EAAS,MAHhD,cAGZuR,EAHY,gBAKKC,MAAM,GAAD,OAAI3B,GAAJ,uBAAwC,CAClE4B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBlU,QAASqC,EACT8R,SAAU5O,EACVqO,gBAbc,UAKZlF,EALY,OAiBlBzE,QAAQmK,IAAI1F,EAAS2F,IAEhB3F,EAAS2F,GAnBI,iBAoBhBnB,EAAqBlI,GAAkByI,SApBvB,yCAsBG/E,EAAS4F,OAtBZ,QAsBVC,EAtBU,OAuBhBjL,EAAU,OAACiL,QAAD,IAACA,GAAD,UAACA,EAAMvK,aAAP,aAAC,EAAa0G,SAvBR,0DA0BlBpH,GAAW,uCAAOoH,SAAU,KAAMA,QAAUuD,KAAKC,UAAL,OA1B1B,yBA4BlBb,GAAa,GA5BK,6EAAH,qDAkCnB,OACE,qCACE,cAAC,IAAD,CAAMpE,SAAS,OAAO/G,MAAM,aAAagH,MAAI,EAA7C,SACGpH,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,KAAM,mBAEzB,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAhB,SACGL,EACC,IACA,wGAGJ,cAAC,IAAD,CAAMK,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASF,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,KAAM,mBAEzB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EACC,IACA,uIAGHmL,IAAsBjI,GAAkBwJ,KACvC,cAAC,IAAD,CAAUrE,OAAO,OAAOtD,MAAM,UAE9B,eAACyF,GAAD,WACE,cAACC,GAAD,CACExG,SA9EO,SAAC0I,GAA0C,IACtDvQ,EAAUuQ,EAAM/J,OAAhBxG,MACR2C,EAAQK,YAAYhD,GAEjBA,EAAMJ,QAAU,GAAKI,EAAMJ,QAAU,GAEtCsP,GAAW,GAIXA,GAAW,IAqEDsB,UAAWnP,IAAa4N,EACxBhI,UAAW5F,GAAY4N,EACvBwB,UTlKmB,ESmKnBC,UTlKmB,GSmKnB5I,SAAUwH,EACVqB,YAAa/M,EAAgB,KAAM,sBACnC5D,MAAOqB,IAET,eAACkN,GAAD,WACGhF,GAAa,cAAC,IAAD,CAAeL,MAAI,KAC/BK,GAAa0F,GAAW5N,GAAY,cAAC,IAAD,CAAe2C,MAAM,aACzDuF,IAAc0F,GAAW5N,GAAY,cAAC,IAAD,CAAa2C,MAAM,kBAIhE,cAAC,IAAD,CAAMA,MAAM,aAAa+G,SAAS,OAAO6F,GAAG,MAAM3M,GAAG,OAAOgE,MAAO,CAAE4I,UAAW,QAAhF,SACGrE,IAEH,cAAC,IAAD,CAAMzI,GAAG,IAAIC,MAAM,UAAUC,GAAG,MAAhC,SACGL,EACC,KACA,gJAGJ,uBAAOkN,QAAQ,WAAW7I,MAAO,CAAE8I,QAAS,QAASC,OAAQ,UAAWC,aAAc,QAAtF,SACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,qBAAKjJ,MAAO,CAAEC,KAAM,QAApB,SACE,cAAC,IAAD,CAAU+E,GAAG,WAAWkE,MAAM,KAAKpJ,QAAS2G,EAAgB7G,SA5DhD,kBAAM8G,GAAmBD,QA8DvC,cAAC,IAAD,CAAM0C,GAAG,MAAT,SACGxN,EAAgB,KAAM,+EAI7B,cAAC,IAAD,CAAQ0F,QAAStD,EAAe8B,UAAWmH,GAAWK,GAAiB/F,IAAcmF,EAArF,SACG9K,EAAgB,IAAK,kBAI5B,cAAC,IAAD,CAAQ0F,QAAS+F,EAAiCvH,UAAWmH,IAAYK,EAAzE,SACG1L,EAAgB,IAAK,uBAEtB0G,GACA,cAAC,IAAD,CAAMtG,MAAM,UAAUqN,GAAG,OAAzB,SACGzN,EAAgB,KAAD,uBAAuBhD,EAAvB,sBAA0D,CAAEqK,IAAKrK,USvK5E0Q,GA/BD,WAAO,IAAD,EACqBxN,qBAAW9B,GAA1CjB,EADU,EACVA,cAAeC,EADL,EACKA,YAGvB,OAFoB9C,cAAZC,QAMH4C,EAIe,IAAhBC,EACK,cAAC,GAAD,IAGW,IAAhBA,EACK,cAAC,GAAD,IAGW,IAAhBA,EACK,cAACuQ,GAAD,KAETxL,QAAQmK,IAAIlP,GACQ,IAAhBA,EACK,cAAC,GAAD,IAGF,MAnBE,6CAJA,cAAC,EAAD,KCAIwQ,GATS,kBACtB,cAAC,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,UCGOC,GAAc,WAAO,IAAD,EACC3U,oBAAS,GADV,mBACxB4U,EADwB,KACdC,EADc,OAED7U,mBAAS,GAFR,mBAExB8U,EAFwB,KAEfC,EAFe,KAGvB3T,EAAYD,cAAZC,QAEF4T,EAAmBC,uBAAY,WACnCF,GAAW,SAACG,GAAD,OAAiBA,EAAc,OACzC,CAACH,IAcJ,OAZA5U,qBAAU,WAOJiB,GANkB,uCAAG,8BAAA7B,EAAA,6DACjB4V,EAAsBC,cADL,SAEMD,EAAoB1V,QAAQmV,SAASxT,GAASzB,OAFpD,OAEjB0V,EAFiB,OAGvBR,EAAYQ,GAHW,2CAAH,oDAOpBC,KAED,CAAClU,EAAS0T,EAASD,IAEf,CAAED,WAAUI,qBAmENO,GAhE6B,SAAC,GAA8B,IAA5BtN,EAA2B,EAA3BA,UAAWuI,EAAgB,EAAhBA,UAAgB,EAChCxQ,oBAAS,GADuB,mBACjE2I,EADiE,KACnD6M,EADmD,KAEhEpU,EAAYD,cAAZC,QACFyF,EAAkBC,cAChB8N,EAAaD,KAAbC,SACFO,EAAsBM,cAL4C,EAMnCnN,cAA7BsI,EANgE,EAMhEA,aAAcvI,EANkD,EAMlDA,WAoBtB,OACE,cAAC,IAAD,CAAO0I,MAAOlK,EAAgB,IAAK,oBAAqB2J,UAAWA,EAAnE,SACE,sBAAKtF,MAAO,CAAEwK,SAAU,SAAxB,UACE,cAAC,IAAD,CAAM1O,GAAG,IAAT,SAAcH,EAAgB,IAAK,6DACnC,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,MAAhB,SACGL,EACC,IACA,0IAGJ,cAAC,IAAD,CAAMG,GAAG,IAAT,SACGH,EAAgB,IAAK,wFAExB,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,MAAhB,SACGL,EACC,IACA,kGAGJ,cAAC,IAAD,CAAMG,GAAG,IAAIE,GAAG,OAAhB,SACGL,EACC,IACA,uJAGJ,cAAC,IAAD,CACEwE,QAAS1C,EAAe,cAAC,IAAD,CAAewD,MAAI,EAAClF,MAAM,iBAAoB,KACtEuF,UAAW7D,EACX4D,QA9CY,WAClB4I,EAAoB1V,QACjBkW,cACA9H,KAAK,CAAEC,KAAM1M,IACb0H,GAAG,WAAW,WACb0M,GAAgB,MAEjB1M,GAAG,WAAW,WACb8H,EAAa,YACb3I,IACAuI,OAED1H,GAAG,SAAS,SAACC,GACZyM,GAAgB,GAChBnN,EAAW,QAAD,OAAUU,QAAV,IAAUA,OAAV,EAAUA,EAAO0G,aAiCzB1E,UAAW6J,EAJb,SAMG/N,EAAgB,IAAK,2BCtFjB+O,GANOxP,IAAOC,IAAV,gHACU,qBAAGC,MAAkBC,OAAOC,c,mBJD7CwK,K,cAAAA,E,gBAAAA,E,gBAAAA,E,mBAAAA,Q,KAqBZ,I,yDAAMpM,GAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFF,GADL,IAEEgR,YAAa/Q,EAAOgR,KACpBC,aAAclR,EAAMgR,cAExB,IAAK,cACH,OAAO,2BACFhR,GADL,IAEEgR,YAAahR,EAAMkR,aACnBA,aAAclR,EAAMgR,cAExB,QACE,OAAOhR,IA2BEmR,GAfQ,WAA+B,IAAD,EACzB3Q,qBAAWT,GAAS,CAC5CiR,YAAa7E,GAAMiF,MACnBF,aAAc,OAHmC,mBAC5ClR,EAD4C,KACrCS,EADqC,KAYnD,OAAO,2BAAKT,GAAZ,IAAmBqR,UAND,kBAAM5Q,EAAS,CAAEP,KAAM,WAAY+Q,KAAM9E,GAAMiF,SAMnCE,WALX,kBAAM7Q,EAAS,CAAEP,KAAM,WAAY+Q,KAAM9E,GAAMoF,UAKxBC,WAJvB,kBAAM/Q,EAAS,CAAEP,KAAM,WAAY+Q,KAAM9E,GAAMsF,UAIZC,YAHlC,kBAAMjR,EAAS,CAAEP,KAAM,WAAY+Q,KAAM9E,GAAMwF,WAGAC,WAFhD,kBAAMnR,EAAS,CAAEP,KAAM,oB,oBKpB7B2R,GAlCY,WAAO,IAAD,EACL1W,mBAAS,CACjC2W,uBAAwB,IAAInW,IAAU,GACtCoW,qBAAsB,IAAIpW,IAAU,GACpCqW,mBAAoB,IAAIrW,IAAU,KAJL,mBACxBsW,EADwB,KACjBC,EADiB,KAMvB1O,EAAeC,cAAfD,WAyBR,OAvBAlI,qBAAU,YACQ,uCAAG,sCAAAZ,EAAA,sEAETkR,EAAkBuG,cAFT,SAGkEC,aAAiB,CAChGxG,EAAgBhR,QAAQkX,yBAAyBhX,KACjD8Q,EAAgBhR,QAAQmX,uBAAuBjX,KAC/C8Q,EAAgBhR,QAAQoX,qBAAqBlX,OANhC,mCAGRgX,EAHQ,KAGgBC,EAHhB,KAGsCC,EAHtC,KASfE,EAAS,CACPJ,uBAAwB,IAAInW,IAAUmW,GACtCC,qBAAsB,IAAIpW,IAAUoW,GACpCC,mBAAoB,IAAIrW,IAAUqW,KAZrB,kDAefxO,EAAW,QAAS,6CAfL,0DAAH,qDAmBhB6O,KACC,CAACH,EAAU1O,IAEPyO,GC5BHK,GAAa/Q,IAAOgR,IAAV,wQACM,qBAAG9Q,MAAkB+Q,KAAKC,cAW5C,qBAAGhR,MAAkBiF,aAAagM,MAKhCC,GAAgBpR,IAAOC,IAAV,iPACE,qBAAGoR,MAalBC,GAAiBtR,YAAOuR,IAAPvR,CAAH,+DAcLwR,GATqC,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACrD,OACE,eAACL,GAAD,CAAeC,GAAE,iCAAkBI,EAAQ/K,WAA1B,iBAAkB,EAAaqB,cAA/B,aAAkB,EAAqB3C,IAAxD,WACIqM,EAAQC,UAAY,cAACJ,GAAD,IACtB,cAACP,GAAD,CAAY1M,IAAG,wBAAmBoN,EAAQ5H,KAAK9B,OAAO4J,KAAOA,IAAKF,EAAQ5H,KAAKtF,WC3B/EqN,GAAgB5R,YAAOqF,KAAQM,MAAM,CAAEkM,QAAS,aAAhC7R,CAAH,6MACD,qBAAGE,MAAkBC,OAAO2R,WACnC,qBAAG5R,MAAkBC,OAAO2R,WAInB,qBAAG5R,MAAkBC,OAAO2R,WAK1CV,GAAgBpR,IAAOC,IAAV,sHAIf,qBAAGC,MAAkBiF,aAAagM,MA+EvBY,GAzE6B,SAAC,GAAwD,IAAtD5B,EAAqD,EAArDA,YAAaJ,EAAwC,EAAxCA,WAAYE,EAA4B,EAA5BA,WAAY7F,EAAgB,EAAhBA,UAAgB,EACxDxQ,mBAAS,MAD+C,mBAC3FoY,EAD2F,KAC5EC,EAD4E,KAE1FR,EAAYnH,cAAZmH,QAF0F,EAG3CnB,KAA/CG,EAH0F,EAG1FA,mBAAoBF,EAHsE,EAGtEA,uBACtBpS,EAAsBsT,EAAQC,SAAWjB,EAAqBF,EAC9DpJ,EAAyBrE,EAAkB3E,GAC3CsC,EAAkBC,cAChB1F,EAAYD,cAAZC,QACFhB,EAAeiN,cACfiL,EAAOT,EAAQC,SAAWjB,EAAqBF,EAkBrD,OAZAxW,qBAAU,WAOJiB,GANqB,uCAAG,8BAAA7B,EAAA,sEACHa,EAAaX,QAAQiF,UAAUtD,EAASmO,eAA4B5P,OADjE,OACpB8N,EADoB,OAEpBC,EAAmB,IAAIlN,IAAUiN,GACvC4K,EAAiB3K,EAAiB6K,GAAGD,IAHX,2CAAH,oDAOvBE,KAED,CAACpX,EAASkX,EAAMD,EAAkBjY,IAEhCyX,EAKH,eAAC,IAAD,CAAM1D,WAAW,SAAS1H,eAAe,SAASgM,cAAc,SAAhE,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAeZ,QAASA,MAE1B,cAAC,IAAD,CAAM1D,WAAW,SAASjJ,MAAO,CAAEgE,OAAQ,QAAUzC,eAAe,SAApE,SACE,cAAC,IAAD,CAAMzF,GAAG,IAAIC,MAAM,UAAnB,UACIsG,GACA1G,EAAgB,IAAD,UAAS6R,aAAsBnU,GAA/B,6CAGpBsT,EAAQC,SACP,qCACE,cAAC,IAAD,CACElM,MAAM,OACN1E,GAAG,MACHqF,SAA2B,IAAlB6L,EAAyB7B,EAAcJ,EAChDpL,UAAWwC,GAA4C,OAAlB6K,EAJvC,SAMGvR,EAAgB,IAAK,wBAExB,cAACmR,GAAD,CAAepM,MAAM,OAAOW,QAAS8J,EAArC,SACGxP,EAAgB,IAAK,2BAI1B,cAAC,IAAD,CACE+E,MAAM,OACN1E,GAAG,MACHqF,SAA2B,IAAlB6L,EAAyB7B,EAAcJ,EAChDpL,UAAWwC,GAA4C,OAAlB6K,EAJvC,SAMGvR,EAAgB,IAAK,wBAG1B,cAAC,IAAD,CAAQoR,QAAQ,OAAOrM,MAAM,OAAOW,QAASiE,EAA7C,SACG3J,EAAgB,IAAK,qBAvCnB,MCiBI8R,GA1E2C,SAAC,GAAmB,IAAjBnI,EAAgB,EAAhBA,UAAgB,EAC/BxQ,oBAAS,GADsB,mBACpE2R,EADoE,KACpDC,EADoD,OAEnC5R,oBAAS,GAF0B,mBAEpE2I,EAFoE,KAEtD6M,EAFsD,KAGnEqC,EAAYnH,cAAZmH,QACAlB,EAA2BD,KAA3BC,uBACF9P,EAAkBC,cAClB8R,EAAyBC,cACvBzX,EAAYD,cAAZC,QAPmE,EAQtCkH,cAA7BsI,EARmE,EAQnEA,aAAcvI,EARqD,EAQrDA,WAChB/C,EAAWqL,eAwBjB,OAAKkH,EAKH,qCACE,cAAC,IAAD,CAAM7Q,GAAG,IAAIC,MAAM,UAAUC,GAAG,OAAhC,SACGL,EAAgB,IAAK,kFAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EACC,IACA,gJAGJ,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EAAgB,IAAD,wCAAuCiS,aAAiBnC,GAAxD,YAElB,uBAAO5C,QAAQ,kBAAkB7I,MAAO,CAAE+I,OAAQ,UAAWD,QAAS,QAASE,aAAc,QAA7F,SACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,IAAD,CAAUjE,GAAG,kBAAkBlF,QAAS2G,EAAgB7G,SA1C3C,kBAAM8G,GAAmBD,IA0C0CyC,MAAM,OACtF,cAAC,IAAD,CAAMC,GAAG,MAAT,SAAgBxN,EAAgB,IAAK,uBAGzC,cAAC,IAAD,CACE+E,MAAM,OACNY,UAAW7D,EACX0C,QAAS1C,EAAe,cAAC,IAAD,CAAewD,MAAI,EAAClF,MAAM,iBAAoB,KACtE8D,UAAW4G,GAAkBhJ,EAC7B4D,QAjD0B,WAC9BqM,EAAuBnZ,QACpBsZ,eACAlL,KAAK,CAAEC,KAAM1M,IACb0H,GAAG,WAAW,WACb0M,GAAgB,MAEjB1M,GAAG,UANN,sBAMiB,sBAAAvJ,EAAA,sEAEP+F,EAASwL,aAAa1P,IAFf,OAGbwP,EAAa,mBAEbJ,IALa,4CAOd1H,GAAG,SAAS,SAACC,GACZV,EAAW,QAAD,OAAUU,QAAV,IAAUA,OAAV,EAAUA,EAAO0G,SAC3B+F,GAAgB,OAkChBtO,GAAG,MANL,SAQGL,EAAgB,IAAK,aAExB,cAAC,IAAD,CAAQoR,QAAQ,OAAOrM,MAAM,OAAOW,QAASiE,EAA7C,SACG3J,EAAgB,IAAK,qBAlCnB,MCqEImS,GAnGmD,SAAC,GAAmB,IAAjBxI,EAAgB,EAAhBA,UAAgB,EAC7CxQ,mBAAS,CAC7CqE,QAAS,KACTD,WAAY,OAHqE,mBAC5ED,EAD4E,KAC/D6B,EAD+D,KAK7Ea,EAAkBC,cAL2D,EAMrC8H,cAAtCpC,EAN2E,EAM3EA,UAAWsC,EANgE,EAMhEA,SAAUD,EANsD,EAMtDA,aACvBvJ,EAAWqL,eACTkH,EAAYnH,cAAZmH,QACFrY,EAAWuP,YAAU5K,EAAYC,YACjCqM,EAAkBoI,cAChBzX,EAAYD,cAAZC,QACAwP,EAAiBtI,cAAjBsI,aAZ2E,EAoB/E/I,EAA6B,CAC/BC,UAAW,WACT,OAAOtI,EAASC,QAAQkO,QAAQ4B,cAA4BpL,EAAYE,SAASwJ,KAAK,CAAEC,KAAM1M,KAEhG2G,UAAW,WACT,OAAK8P,EAAQC,SAMNrH,EAAgBhR,QAAQwZ,cAAc9U,EAAYC,WAAYD,EAAYE,SAASwJ,KAAK,CAAEC,KAAM1M,IAL9FqP,EAAgBhR,QACpByZ,kBAAkB/U,EAAYC,WAAYD,EAAYE,SACtDwJ,KAAK,CAAEC,KAAM1M,KAKpB6G,UAAU,WAAD,4BAAE,sBAAA1I,EAAA,sEAEH+F,EAASwL,aAAa1P,IAFnB,OAGTwP,EAAa,oBAEbJ,IALS,2CAAF,kDAAC,KAnBV/H,EAdiF,EAcjFA,YACAC,EAfiF,EAejFA,WACAE,EAhBiF,EAgBjFA,YACAD,EAjBiF,EAiBjFA,aACAE,EAlBiF,EAkBjFA,cACAI,EAnBiF,EAmBjFA,cAuBF,OACE,qCACE,cAAC,IAAD,CAAMjC,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EAAgB,IAAK,0DAEvB2F,EACC,cAAC,IAAD,CAAU0C,OAAO,OAAOhI,GAAG,SAE3B2H,EAAa1H,KAAI,SAACgI,GAAe,IACxBC,EADuB,YACPN,EAASK,EAAUnC,YADZ,MAS9B,OACE,cAAC,GAAD,CACErC,KAAK,iBAEL1H,MAAOmM,EACPvE,MAAK,uBAAkBsE,EAAUhB,OAAO3C,IACxCZ,UAAWwE,IAAiBjL,EAAYE,QACxCyG,SAdiB,SAAC7H,GACpB+C,EAAe,CACb3B,QAAS+J,OAAOnL,GAChBmB,WAAYiL,aAAiBF,EAAUpK,SAYvCgG,SAAUtC,GAAeE,GAAgBC,EAP3C,SASE,cAAC,IAAD,CAAMqF,MAAI,EAAV,SAAYkB,EAAUxE,QAPjBwE,EAAUnC,gBAYrBR,GAAqC,IAAxBqC,EAAahM,QAC1B,qCACE,cAAC,IAAD,CAAMmE,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EAAgB,IAAK,iFAExB,cAAC,IAAD,CAAMG,GAAG,IAAIC,MAAM,aAAaC,GAAG,OAAnC,SACGL,EAAgB,IAAK,+EAI5B,cAAC,GAAD,CACEwF,kBAAmBzD,GAAeD,GAAgBD,GAAsC,OAAxBvE,EAAYE,QAC5EoE,YAAaA,EACb6D,mBAAoB5D,GAAcE,GAAuC,OAAxBzE,EAAYE,QAC7DsE,aAAcA,EACdb,UAAWe,EACXd,UAAWkB,IAEb,cAAC,IAAD,CAAQgP,QAAQ,OAAOrM,MAAM,OAAOW,QAASiE,EAAWzF,SAAUtC,GAAeE,EAAjF,SACG9B,EAAgB,IAAK,sBCvCfsS,GAvDyC,SAAC,GAA+B,IAA7BhD,EAA4B,EAA5BA,WAAY3F,EAAgB,EAAhBA,UAAgB,EAC/CxQ,oBAAS,GADsC,mBAC9EyI,EAD8E,KACjEkG,EADiE,KAE7EkJ,EAAYnH,cAAZmH,QACFhR,EAAkBC,cAChB1F,EAAYD,cAAZC,QAJ6E,EAK9BsV,KAA/CG,EAL6E,EAK7EA,mBAAoBF,EALyD,EAKzDA,uBACtBvW,EAAeiN,cACbhF,EAAeC,cAAfD,WACFiQ,EAAOT,EAAQC,SAAWjB,EAAqBF,EAkBrD,OAAKkB,EAKH,eAAC,IAAD,CAAMY,cAAc,SAApB,UACE,eAAC,IAAD,CAAMtE,WAAW,SAAS1H,eAAe,gBAAgBvF,GAAG,OAA5D,UACE,cAAC,IAAD,UACG2Q,EAAQC,SAAWjR,EAAgB,IAAK,mBAAqBA,EAAgB,IAAK,yBAErF,cAAC,IAAD,UAAOA,EAAgB,IAAD,UAAS6R,aAAsBJ,GAA/B,eAExB,cAAC,IAAD,CACEvN,SAAUtC,EACV+D,UAAW/D,EACX4C,QAAS5C,EAAc,cAAC,IAAD,CAAe0D,MAAI,EAAClF,MAAM,iBAAoB,KACrE2E,MAAM,OACN1E,GAAG,MACHqF,QAlCgB,WACpBnM,EAAaX,QACVkO,QAAQ4B,cAA4B+I,EAAKc,MAAM,GAAGxL,UAClDC,KAAK,CAAEC,KAAM1M,IACb0H,GAAG,WAAW,WACb6F,GAAe,MAEhB7F,GAAG,WAAW,WACbqN,OAEDrN,GAAG,SAAS,SAACC,GACZV,EAAW,QAAD,OAAUU,QAAV,IAAUA,OAAV,EAAUA,EAAO0G,SAC3Bd,GAAe,OAgBjB,SAQG9H,EAAgB,IAAK,aAExB,cAAC,IAAD,CAAQoR,QAAQ,OAAOrM,MAAM,OAAOW,QAASiE,EAAWzF,SAAUtC,EAAlE,SACG5B,EAAgB,IAAK,qBAtBnB,MCjCLwS,IAAS,sBACZrI,GAAMiF,MAAQ,CAAE/F,GAAI,IAAKvJ,MAAO,iBADpB,gBAEZqK,GAAMoF,OAAS,CAAElG,GAAI,IAAKvJ,MAAO,uBAFrB,gBAGZqK,GAAMsF,OAAS,CAAEpG,GAAI,IAAKvJ,MAAO,uBAHrB,gBAIZqK,GAAMwF,QAAU,CAAEtG,GAAI,IAAKvJ,MAAO,iBAJtB,IA6BA2S,GAtB2C,SAAC,GAAmB,IAAjB9I,EAAgB,EAAhBA,UAAgB,EACFwF,KAAjEH,EADmE,EACnEA,YAAaM,EADsD,EACtDA,WAAYE,EAD0C,EAC1CA,WAAYE,EAD8B,EAC9BA,YAAaE,EADiB,EACjBA,WACpD5P,EAAkBC,cAFmD,EAGrDuS,GAAUxD,GAAxB3F,EAHmE,EAGnEA,GAAIvJ,EAH+D,EAG/DA,MAEN4S,EAAc1D,IAAgB7E,GAAMiF,MACpCuD,EAAaD,EAAc,KAAO,kBAAM9C,KAE9C,OACE,cAAC,IAAD,CAAO1F,MAAOlK,EAAgBqJ,EAAIvJ,GAAQ8S,OAAQD,EAAYhJ,UAAWA,EAAWkJ,iBAAkBH,EAAtG,SACE,sBAAKrO,MAAO,CAAEwK,SAAU,SAAxB,UACGG,IAAgB7E,GAAMiF,OACrB,cAAC0D,GAAD,CAAWpD,YAAaA,EAAaJ,WAAYA,EAAYE,WAAYA,EAAY7F,UAAWA,IAEjGqF,IAAgB7E,GAAMsF,QAAU,cAACsD,GAAD,CAAkBpJ,UAAWA,IAC7DqF,IAAgB7E,GAAMoF,QAAU,cAACyD,GAAD,CAAsBrJ,UAAWA,IACjEqF,IAAgB7E,GAAMwF,SAAW,cAACsD,GAAD,CAAiB3D,WAAYA,EAAY3F,UAAWA,UCO/EuJ,GAjCO,WACpB,IAAMlT,EAAkBC,cADE,EAEa6N,KAA/BC,EAFkB,EAElBA,SAAUI,EAFQ,EAERA,iBAFQ,EAGQ3C,aAAS,cAAC,GAAD,CAAsBpK,UAAW+M,KAArEgF,EAHmB,sBAIG3H,aAAS,cAAC,GAAD,KAAsB,GAArD4H,EAJmB,oBAKlBC,EAAexJ,cAAfwJ,WAER,OACE,cAAC,GAAD,UACE,eAAC,IAAD,CACEzB,cAAe,CAAC,SAAU,KAAM,OAChCtE,WAAY,CAAC,QAAS,KAAM,UAC5B1H,eAAe,gBAHjB,UAKE,gCACE,cAAC,IAAD,CAASzF,GAAG,KAAKrE,KAAK,MAAMuE,GAAG,MAAMD,MAAM,YAA3C,SACGJ,EAAgB,IAAK,kBAExB,cAAC,IAAD,CAASG,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,IAAK,+CAEvBqT,GAAc,cAAC,IAAD,CAAQ3N,QAAS0N,EAAjB,SAAsCpT,EAAgB,IAAK,qBAE3E+N,GACC,cAAC,IAAD,CAAQqD,QAAQ,WAAW1L,QAASyN,EAAyBG,UAAW,cAAC,IAAD,IAAxE,SACGtT,EAAgB,IAAK,uCCzB5BuT,GAAqBhU,YAAOiU,IAAPjU,CAAH,oHAIpB,qBAAGE,MAAkBiF,aAAagM,MAMhC+C,GAA0BlU,IAAOgR,IAAV,2IAKzB,qBAAG9Q,MAAkBiF,aAAagM,MAcvBgD,GAR6C,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAU7W,EAAY,eACnF,OAAK6W,EAIE,cAACF,GAAD,aAAyB7P,IAAG,+BAA0B+P,GAASzC,IAAI,qBAAwBpU,IAHzF,cAACyW,GAAD,KCFIK,GApB2C,SAAC,GAAyB,IAAvB1J,EAAsB,EAAtBA,MAAUpN,EAAY,eAC3EkD,EAAkBC,cAExB,GAAqB,kBAAViK,EACT,OACE,cAAC,IAAD,yBAAM9C,MAAI,GAAKtK,GAAf,aACGoN,KAN0E,IAWzEb,EAA4Ba,EAA5Bb,GAAIwK,EAAwB3J,EAAxB2J,SAXqE,EAW7C3J,EAAduC,YAX2D,MAWpD,GAXoD,EAajF,OACE,cAAC,IAAD,yBAAMrF,MAAI,GAAKtK,GAAf,aACGkD,EAAgBqJ,EAAIwK,EAAUpH,OCd/BqH,GAAcvU,YAAOwU,KAAM7O,MAAM,CAAE/E,GAAI,IAAKgH,SAAU,QAAxC5H,CAAH,qFAGb,qBAAGE,MAAkBiF,aAAaC,MA6BvBqP,GAxBuD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAgBnX,EAAY,qBAC7FkD,EAAkBC,cAExB,IAAKgU,EACH,OAAO,KAGT,GAA2B,kBAAhBA,EACT,OACE,cAAC,IAAD,yBAAM9T,GAAG,IAAIC,MAAM,aAAa+G,SAAS,QAAWrK,GAApD,aACGmX,KAV4F,IAe3F5K,EAA4B4K,EAA5B5K,GAAIwK,EAAwBI,EAAxBJ,SAfuF,EAe/DI,EAAdxH,YAf6E,MAetE,GAfsE,EAiBnG,OACE,cAACqH,GAAD,yBAAa1T,MAAM,cAAiBtD,GAApC,aACGkD,EAAgBqJ,EAAIwK,EAAUpH,OCzB/ByH,GAAU3U,YAAOqL,IAAPrL,CAAH,8IAwBE4U,GAhByC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzD,OACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAmBT,MAAOS,EAAYT,QACtC,eAACO,GAAD,WACE,cAAC,GAAD,CAAkBhK,MAAOkK,EAAYlK,QACrC,cAAC,GAAD,CAAwB+J,YAAaG,EAAYH,iBAEnD,eAAC,IAAD,CAAM3G,WAAW,SAAjB,UACE,cAAC,IAAD,CAAWvI,MAAM,OAAO3E,MAAM,aAAamJ,GAAG,QAC9C,cAAC,IAAD,CAAMnJ,MAAM,aAAZ,SAA0BgU,EAAYC,OAAO5K,0BCvB/C6K,GAAO/U,IAAOC,IAAV,8JAKN,qBAAGC,MAAkBiF,aAAagM,MA2BvB6D,GAtBU,WACvB,IAAMvU,EAAkBC,cAClBuU,EAAeC,cAErB,OACE,qCACE,cAACH,GAAD,UACGE,EAAalU,KAAI,SAAC8T,GAAD,OAChB,cAAC,GAAD,CAAsCA,YAAaA,GAA7BA,EAAY/K,SAGb,IAAxBmL,EAAaxY,QACZ,cAAC,IAAD,CAAMsR,WAAW,SAAS1H,eAAe,SAASvB,MAAO,CAAEgE,OAAQ,QAAnE,SACE,cAAC,IAAD,CAASlI,GAAG,KAAKrE,KAAK,KAAKsE,MAAM,eAAjC,SACGJ,EAAgB,IAAK,gC,oBChBnB0U,GAbMnV,IAAOC,IAAV,mJAId,qBAAGC,MAAkBiF,aAAagM,MCcvBiE,GAZiC,SAAC,GAA0B,IAAxBN,EAAuB,EAAvBA,OAAWvX,EAAY,gBAClEkD,EAAkBC,cAClB2U,EAAeP,EAAO5K,iBAE5B,OACE,eAAC,IAAD,yBAAM6D,WAAW,UAAaxQ,GAA9B,cACE,cAAC,IAAD,CAAWyM,GAAG,MAAMnJ,MAAM,eAC1B,cAAC,IAAD,CAAMA,MAAM,aAAZ,SAA0BJ,EAAgB,IAAD,UAAS4U,EAAT,WAAgC,CAAEvN,IAAKuN,WCKhFC,GAAuBtV,YAAOqL,IAAPrL,CAAH,8GACG,qBAAGE,MAAkBC,OAAOoV,eAKnDZ,GAAU3U,IAAOC,IAAV,0CAIPgE,GAAOjE,YAAOqL,IAAPrL,CAAH,8JAKN,qBAAGE,MAAkBiF,aAAaC,MAwDvBoQ,GAlDuC,SAAC,GAAuC,IAArCX,EAAoC,EAApCA,YAAaY,EAAuB,EAAvBA,iBAAuB,EACnD7b,oBAAS,GAD0C,mBACpF8b,EADoF,KACtEC,EADsE,KAErFlV,EAAkBC,cAClBkV,EAAsBC,cACpB7a,EAAYD,cAAZC,QAJmF,EAKtDkH,cAA7BD,EALmF,EAKnFA,WAAYuI,EALuE,EAKvEA,aAoBpB,OACE,eAAC8K,GAAD,WACE,cAAC,GAAD,CAAmBlB,MAAOS,EAAYT,QACtC,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAkBzJ,MAAOkK,EAAYlK,QACrC,cAAC,GAAD,CAAwB+J,YAAaG,EAAYH,iBAEnD,cAAC,GAAD,CAAaI,OAAQD,EAAYC,OAAQgB,GAAI,CAAC,EAAG,KAAM,KAAM,QAAShV,GAAI,CAAC,OAAQ,KAAM,KAAM,KAC/F,cAAC,GAAD,UACE,cAAC,IAAD,CACEqF,QA7BkB,WAC1ByP,EAAoBvc,QACjB0c,UAAUlB,EAAYlc,SACtB8O,KAAK,CAAEC,KAAM1M,IACb0H,GAAG,WAAW,WACbiT,GAAgB,MAEjBjT,GAAG,WAAW,WACbiT,GAAgB,GAChBF,EAAiBZ,GACjBrK,EAAa,wBAEd9H,GAAG,SAAS,SAACC,GACZV,EAAW,QAAD,OAAUU,QAAV,IAAUA,OAAV,EAAUA,EAAO0G,SAC3BsM,GAAgB,OAgBZvP,UAAWsP,EACXzQ,QAASyQ,EAAe,cAAC,IAAD,CAAe3P,MAAI,EAAClF,MAAM,iBAAoB,KACtE8D,SAAU+Q,EACV7D,QAAQ,YALV,SAOGpR,EAAgB,IAAK,sBCVnBuV,GA1DY,WAAO,IAAD,EAC0Bpc,mBAAwB,IADlD,mBACxBqc,EADwB,KACDC,EADC,KAEzBzV,EAAkBC,cAClBxB,EAAWqL,eACTkH,EAAYnH,cAAZmH,QACAzW,EAAYD,cAAZC,QAERjB,qBAAU,WAMJiB,GALgB,uCAAG,4BAAA7B,EAAA,sEACCgd,aAAoBnb,GADrB,OACfob,EADe,OAErBF,EAAwBE,GAFH,2CAAH,oDAMlBC,KAED,CAACrb,EAASkE,EAAUgX,IAEvB,IAAMI,EAAuB,SAACzB,GAC5B3V,EAASqX,aAAe1B,IACxB3V,EAASsX,aAAU3B,EAAYC,SAE/BoB,GAAwB,SAACO,GAAD,OACtBA,EAA0BhQ,QAAO,SAACiQ,GAAD,OAA8BA,EAAyB5M,KAAO+K,EAAY/K,UAI/G,KAAI,OAAC2H,QAAD,IAACA,OAAD,EAACA,EAASC,UACZ,OAAO,KAGT,GAAqC,IAAjCuE,EAAsBxZ,OACxB,OAAO,KAGT,IAAMka,EAAuBC,gBAAMX,EAAuB,UAE1D,OACE,eAAC,IAAD,CAAMvE,UAAQ,EAAC5Q,GAAG,OAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMuR,cAAe,CAAC,SAAU,KAAM,OAAQhM,eAAgB,CAAC,QAAS,KAAM,iBAA9E,SACE,eAAC,IAAD,CAAM0H,WAAW,SAASjN,GAAI,CAAC,OAAQ,KAAM,GAA7C,UACE,cAAC,IAAD,CAAW0E,MAAM,OAAOwE,GAAG,QAC3B,cAAC,IAAD,CAASzN,KAAK,KAAd,SACGkE,EAAgB,IAAD,UAASkW,EAAT,sBAAmD,CAAE7O,IAAK6O,aAKlF,cAAC,IAAD,UACGV,EAAsBlV,KAAI,SAAC8T,GAAD,OACzB,cAAC,GAAD,CAA0CA,YAAaA,EAAaY,iBAAkBa,GAAjEzB,EAAYlc,kBC7C5Bke,GAb+B,SAAC,GAAkB,IAAhB7X,EAAe,EAAfA,SACzCyB,EAAkBC,cAExB,OACE,eAAC,IAAD,CAAM2R,cAAc,SAAStE,WAAW,SAAS1H,eAAe,SAASyQ,EAAE,OAA3E,UACE,cAAC,IAAD,CAAsBtR,MAAM,OAAOsD,OAAO,SAC1C,cAAC,IAAD,CAASlI,GAAG,KAAKrE,KAAK,KAAKsE,MAAM,eAAjC,SACG7B,GAAYyB,EAAgB,IAAK,sBCsB3BsW,GA5BmB,SAAC,GAAyB,IAAD,IAAtBC,mBAAsB,MAAR,EAAQ,EACnDvW,EAAkBC,cAExB,OACE,qCACE,cAAC,IAAD,CAAMI,GAAG,OAAT,SACE,cAAC,KAAD,CAAY8H,GAAG,SAAf,SACE,eAAC,IAAD,CAAMmF,WAAW,SAAjB,UACE,cAAC,IAAD,CAAiBlN,MAAM,YACvB,cAAC,IAAD,CAAMA,MAAM,UAAZ,SAAuBJ,EAAgB,KAAM,2BAKnD,cAAC,IAAD,CAAMK,GAAG,OAAOuF,eAAe,SAA/B,SACE,eAAC,IAAD,CAAY2Q,YAAaA,EAAanF,QAAQ,SAAS7D,MAAM,KAA7D,UACE,cAAC,IAAD,CAAgBpN,GAAIsH,KAAYU,GAAG,iBAAnC,SACGnI,EAAgB,KAAM,iBAEzB,cAAC,IAAD,CAAgBG,GAAIsH,KAAYU,GAAG,WAAnC,SACGnI,EAAgB,KAAM,6BCuBpBwW,GA5CI,WACjB,IAAMxW,EAAkBC,cAExB,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,CAAMI,GAAG,OAAT,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMiN,WAAW,SAAS1H,eAAe,gBAAzC,SACE,gCACE,cAAC,IAAD,CAAS9J,KAAK,KAAKuE,GAAG,MAAtB,SACGL,EAAgB,KAAM,kBAEzB,cAAC,IAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,KAAM,2DAI1C,cAAC,IAAD,UACE,cAAC,GAAD,SAGJ,eAAC,IAAD,CAAMK,GAAG,OAAT,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMiN,WAAW,SAAS1H,eAAe,gBAAzC,SACE,gCACE,cAAC,IAAD,CAAS9J,KAAK,KAAKuE,GAAG,MAAtB,SACGL,EAAgB,KAAM,iBAEzB,cAAC,IAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,KAAM,8CACpC,cAAC,IAAD,CAAMG,GAAG,IAAT,SACGH,EAAgB,KAAM,0EAK/B,cAAC,IAAD,UACE,cAAC,GAAD,aC7BKyW,GALIlX,YAAOmX,IAAPnX,CAAH,yEACA,mBATM,SAACE,GACrB,OAAIA,EAAMkX,OACD,sEAGF,uEAIsBC,CAAf,EAAGnX,UCHboX,GAAetX,IAAOgR,IAAV,4EAmBHuG,GAdyC,SAAC,GAAa,IAAX7Q,EAAU,EAAVA,IACzD,OACE,gCACE,cAAC4Q,GAAD,CAAcjT,IAAG,uBAAkBqC,EAAIqB,OAAOyP,MAC9C,cAAC,IAAD,CAAM3P,MAAI,EAAC/G,GAAG,MAAd,SACG4F,EAAInC,OAEP,cAAC,IAAD,CAAM3D,GAAG,IAAIgH,SAAS,OAAO/G,MAAM,aAAnC,SACG6F,EAAIgO,kBCdP+C,GAAkBzX,IAAOC,IAAV,gWAMjB,qBAAGC,MAAkBiF,aAAagM,MAMlC,qBAAGjR,MAAkBiF,aAAaC,MAIlC,qBAAGlF,MAAkBiF,aAAaqS,MAgDvBE,GA3CM,WACnB,IAAMjX,EAAkBC,cAChB+H,EAAiBD,cAAjBC,aAER,OACE,qCACE,cAAC,IAAD,CAAS7H,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,MAA9B,SACGL,EAAgB,IAAK,0BAExB,cAAC,IAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,iGAGJ,cAAC,IAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,+FAGHgI,EAAahM,OAAS,GACrB,cAACgb,GAAD,UACGhP,EAAa1H,KAAI,SAAC4W,GAAD,OAChB,cAAC,GAAD,CAA8CjR,IAAKiR,GAA7BA,EAAY/Q,iBAIf,IAAxB6B,EAAahM,QACZ,cAAC,IAAD,CAAM4J,eAAe,SAASyQ,EAAE,OAAhC,SACE,cAAC,IAAD,CAAMlP,SAAS,OAAOC,MAAI,EAAChH,MAAM,eAAjC,SACGJ,EAAgB,IAAK,qBAI5B,eAAC,IAAD,CAAMsN,WAAW,SAAS1H,eAAe,WAAzC,UACE,cAAC,KAAD,CAAMuC,GAAG,gBAAT,SAA0BnI,EAAgB,IAAK,2CAC/C,cAAC,IAAD,WC/DFmX,GAAgB5X,YAAOwU,IAAPxU,CAAH,gFACG,qBAAGE,MAAkBC,OAAO+D,YAIlD0T,GAAcC,aAAe,CAC3Bf,EAAG,QAGUc,I,2BAAAA,MCiBAE,GAlByB,SAAC,GAAmE,IAA3DC,EAA0D,EAAhEC,KAAYrN,EAAoD,EAApDA,MAAOsN,EAA6C,EAA7CA,SAA6C,IAAnCjU,kBAAmC,SAAZzG,EAAY,8CACzG,OACE,cAAC,GAAD,2BAAmBA,GAAnB,aACE,eAAC,IAAD,CAAMwQ,WAAW,QAAjB,UACE,cAACgK,EAAD,CAAMvS,MAAM,OAAOwE,GAAG,OAAOnJ,MAAOmD,EAAa,eAAiB,iBAClE,gCACE,cAAC,IAAD,CAASpD,GAAG,KAAKrE,KAAK,KAAKsE,MAAOmD,EAAa,eAAiB,OAAhE,SACG2G,IAEH,cAAC,IAAD,CAAMuN,cAAc,YAAYrX,MAAOmD,EAAa,eAAiB,aAAc4D,SAAS,OAAOC,MAAI,EAAvG,SACGoQ,cCfPE,GAAcnY,IAAOC,IAAV,2VAab,qBAAGC,MAAkBiF,aAAagM,MAKhCiH,GAA0BpY,IAAOC,IAAV,qIAMvBkY,IAMA/G,GAAgBpR,IAAOC,IAAV,sHAIf,qBAAGC,MAAkBiF,aAAagM,MAmBvBkH,GAbyC,SAAC,GAAiB,IAAf5G,EAAc,EAAdA,QAAc,EAC1CxF,aAAS,cAAC,GAAD,KAAsB,GAArD4H,EADgE,oBAGvE,OACE,eAACuE,GAAD,CAAyBjS,QAAS0N,EAAlC,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAepC,QAASA,MAE1B,cAAC0G,GAAD,QC3BAG,GAAUtY,IAAOC,IAAV,oGAIT,qBAAGC,MAAkBiF,aAAagM,MAKhCoH,GAAWvY,YAAOwY,IAAPxY,CAAH,6JAKV,qBAAGE,MAAkBiF,aAAagM,MAMhCsH,GAASzY,IAAOC,IAAV,mFAMNyY,GAAiB1Y,YAAOwU,IAAPxU,CAAH,wFAGhB,qBAAGE,MAAkBiF,aAAagM,MAKhCwH,GAAc3Y,YAAOiI,IAAPjI,CAAH,kPASb,qBAAGE,MAAkBiF,aAAagM,MAMhCyH,GAAU5Y,IAAOC,IAAV,sDA4DE4Y,GAxDO,WAAO,IACnB7d,EAAYD,cAAZC,QACAyW,EAAYnH,cAAZmH,QACFhR,EAAkBC,cAExB,OAAK1F,EAKH,qCACE,cAAC,GAAD,CAAMgc,YAAa,IACnB,8BACE,eAAC,IAAD,WACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMjJ,WAAY,CAAC,QAAS,KAAM,UAAWsE,cAAe,CAAC,SAAU,KAAM,OAA7E,UACE,cAAC,GAAD,CAAmBZ,QAASA,IAC5B,eAAC6G,GAAD,WACE,cAACC,GAAD,qBAAe9G,EAAQ3E,YACvB,cAAC,IAAD,CAAMiB,WAAW,SAAjB,SACE,eAAC4K,GAAD,CAAaG,KAAI,sCAAiC9d,GAAW6F,MAAM,OAAOkY,UAAQ,EAAlF,UACG/d,EACD,cAAC,IAAD,CAAaiT,GAAG,aAGpB,cAACyK,GAAD,CAAgB7Q,MAAI,EAApB,SAAsB4J,EAAQ5H,KAAKtF,aAGvC,cAACkU,GAAD,UACGhH,EAAQC,SACP,cAAC,IAAD,CAAKqC,UAAW,cAAC,IAAD,CAAqBvO,MAAM,SAAWwT,SAAO,EAA7D,SACGvY,EAAgB,IAAK,YAGxB,cAAC,IAAD,CAAKoR,QAAQ,UAAUkC,UAAW,cAAC,IAAD,CAAWvO,MAAM,SAAWwT,SAAO,EAArE,SACGvY,EAAgB,IAAK,iBAK9B,eAAC,IAAD,WACE,cAAC,GAAD,CAASuX,KAAMiB,IAAWtO,MAAO8G,EAAQqD,OAAQmD,SAAUxX,EAAgB,IAAK,UAAWK,GAAG,SAC9F,eAAC8X,GAAD,WACE,cAAC,IAAD,CAAShY,GAAG,KAAKrE,KAAK,KAAKuE,GAAG,OAA9B,SACGL,EAAgB,KAAM,kBAEzB,cAAC,GAAD,OAEF,cAAC,GAAD,eA1CD,cAAC,EAAD,KC3CIyY,UA/BC,WAAO,IAAD,EAC6B5O,cAAzC1M,EADY,EACZA,cAAewI,EADH,EACGA,UAAW0N,EADd,EACcA,WAC1B9Y,EAAYD,cAAZC,QAIR,OAFAme,eAEKvb,GAAiBwI,EACb,cAACgT,EAAA,EAAD,IAGLpe,IAAY8Y,EAEZ,cAACxF,EAAA,EAAD,UACE,cAAC,GAAD,MAMJ,eAACA,EAAA,EAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAO+K,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD","file":"static/js/9.434b84b5.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport cake3ABI from 'config/abi/cake3.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getCake3Address } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply3 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cake3ABI, getCake3Address())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cake3ABI, getCake3Address())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","export const MINT_COST = 0.5\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['Blue', 'Red', 'White', 'Sun']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1 DBALL')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  // const { library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.NEW)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n\n    if(value.length >= 3 && value.length <= 15)\n    {\n      setIsValid(true)\n    }\n    else\n    {\n      setIsValid(false)\n    }\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n      const signature = await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      console.log(response.ok)\n\n      if (!response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} DBALL is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(variationId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, `Cost: ${MINT_COST} DBALL`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} DBALL is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useGetCollectibles, useToast } from 'state/hooks'\nimport { useERC721 } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const contract = useERC721(selectedNft.nftAddress)\n  const { account } = useWallet()\n  const { toastError } = useToast()\n\n  const handleApprove = () => {\n    contract.methods\n      .approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      .send({ from: account })\n      .once('sending', () => {\n        setIsApproving(true)\n      })\n      .once('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .once('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a DBALL Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} DBALL`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWallet()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n  console.log(currentStep)\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWallet()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(minimumCakeRequired)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles, useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC721, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const TranslateString = useI18n()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const contract = useERC721(selectedNft.nftAddress)\n  const profileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return contract.methods.approve(getPancakeProfileAddress(), selectedNft.tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods\n          .reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n          .send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(selectedNft.nftAddress, selectedNft.tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap-libs/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWallet()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport { useGetCollectibles } from 'state/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWallet()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWallet()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}